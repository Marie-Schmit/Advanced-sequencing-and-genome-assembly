/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author marie
 */
public class contigsMetrics extends javax.swing.JPanel {

    /**
     * Creates new form contigsMetrics
     */
    public contigsMetrics() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        sequenceTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        sequenceStatArea = new javax.swing.JTextArea();
        graphicalRepresentation1 = new graphicalRepresentation();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Contig / scaffold metrics"));

        sequenceTextArea.setBackground(new java.awt.Color(240, 240, 240));
        sequenceTextArea.setColumns(20);
        sequenceTextArea.setRows(5);
        sequenceTextArea.setBorder(null);
        sequenceTextArea.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        sequenceTextArea.setEnabled(false);
        jScrollPane1.setViewportView(sequenceTextArea);

        sequenceStatArea.setBackground(new java.awt.Color(240, 240, 240));
        sequenceStatArea.setColumns(20);
        sequenceStatArea.setRows(5);
        sequenceStatArea.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        sequenceStatArea.setEnabled(false);
        jScrollPane2.setViewportView(sequenceStatArea);

        javax.swing.GroupLayout graphicalRepresentation1Layout = new javax.swing.GroupLayout(graphicalRepresentation1);
        graphicalRepresentation1.setLayout(graphicalRepresentation1Layout);
        graphicalRepresentation1Layout.setHorizontalGroup(
            graphicalRepresentation1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        graphicalRepresentation1Layout.setVerticalGroup(
            graphicalRepresentation1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
            .addComponent(graphicalRepresentation1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(graphicalRepresentation1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    public void setSequence(String sequence){
        //Disaply sequence text of selected scaffold / contig
        sequenceTextArea.setText(sequence);
        //Calculate statistics with method from class statistics calculation
        statisticsCalculation Stats = new statisticsCalculation();
        int length = Stats.lengthSequence(0, sequence.replace("\n", "")); //Length of selected sequence
        int numberGC[] = Stats.numberGC(new StringBuffer(sequence));
        //Display GC and length of selected scaffold / contig
        sequenceStatArea.setText("Length of scaffold or contig: " + length + "\t");
        double GC;
        if(length != 0){
            GC = 100*(numberGC[0]+numberGC[1])/(double)length;
            //Round to the nearest cent
            GC = (int)(GC*100)/100.;
        }
        else
               GC = -1;
        sequenceStatArea.append("GC content of scaffold or contig: " + GC + "\t");
        
        //Graphical representation oof scaffhold
        this.graphicalRepresentation1.repaintGraph(sequence);
    }
    
    public String getSequence(){
        return sequenceTextArea.getText();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private graphicalRepresentation graphicalRepresentation1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea sequenceStatArea;
    private javax.swing.JTextArea sequenceTextArea;
    // End of variables declaration//GEN-END:variables
}
