
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.AbstractListModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author marie
 */
public class ContigsList extends javax.swing.JPanel {

    /**
     * Creates new form ContigsList
     */
    public ContigsList() {
        initComponents();
    }
    
    //Panel that will show the metrics of the selected contig
    contigsMetrics contigShowStats = new contigsMetrics();
    //Arrays of contigs header and their corresponding sequence
    String[] contigsHeaders;
    String[] contigsSeq;
    //Set gtf panel
    gtfContent gtfPanel ;
    ArrayList<StringBuffer> gtfFileContent;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("List of contigs"), "List of contigs / scaffolds"));

        jList1.setBackground(new java.awt.Color(240, 240, 240));
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        //Pass value to contigs metric corresponding text area, to get the metrics displayed
        if(jList1.getSelectedIndex() != -1) //Element is selected
            contigShowStats.setSequence(contigsSeq[jList1.getSelectedIndex()]);
            //Display selected lines in gtf content
            String sequenceName = jList1.getSelectedValuesList().get(0);
            sequenceName = sequenceName.replace(">", "");
            sequenceName = sequenceName.replace("\n", "");
            gtfPanel.displayTablePage(gtfFileContent, sequenceName);
    }//GEN-LAST:event_jList1ValueChanged

    public void setContigMetrics(contigsMetrics metrics){
        contigShowStats = metrics;
        this.contigShowStats.getSequence();
    }
    
    //Set list values when fasta file is selected
    public void setList(ArrayList<StringBuffer> fastaFileContent, gtfContent gtfPane, ArrayList<StringBuffer> gtfFileContent) {
        //Pass values to gtfContent to display only the lines of selected contig
        this.gtfFileContent = gtfFileContent;
        this.gtfPanel = gtfPane;
        //Instance of statisticsCalculation
        statisticsCalculation Stats = new statisticsCalculation();
        //Get list of headers, and list of sequences
        String[][] contigsAll = Stats.contigsArrays(fastaFileContent);
        contigsHeaders = contigsAll[0];
        contigsSeq = contigsAll[1];
        //Put values into GUI panel list
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return contigsHeaders.length;
            }

            public String getElementAt(int i) {
                return contigsHeaders[i];
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
