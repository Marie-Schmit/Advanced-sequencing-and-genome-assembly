
import java.util.ArrayList;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author marie
 */
public class graphicalRepresentation extends javax.swing.JPanel {

    /**
     * Creates new form graphicalRepresentation
     */
    public graphicalRepresentation() {
        initComponents();
    }

    //x and width coordinates of gaps (array list of array of two integers: x and width)
    private ArrayList<int[]> xWidthGapCoord = new ArrayList<int[]>();
    //y coordinate
    private int y = this.getHeight();
    private int height = this.getHeight();

    //Calculate coordinates of gaps rectangles
    private void calculateCoordinates(String sequence) {
        int width = 0;
        int index = 0;
        

        //Look for "N" in the sequence
        while (index < sequence.length()) {            
            if(sequence.charAt(index) == ('N')){
                System.out.println(index + "___________");
                System.out.println("N");
                
                int[] coord = new int[2];
                coord[0] = index; //Index of first N is x coordinate
                width ++; //One N found
                
                //Check for other successive N to increase the width of the rectangle
                index++;
                while(sequence.charAt(index) == ('N')){
                    System.out.println("N");
                    width++;
                    index++;
                }
                //No other N found: save width in list of coordinates
                coord[1] = width;
                xWidthGapCoord.add(coord);
            }
            width = 0;
            index++;
        }
        for(int j = 0; j < xWidthGapCoord.size(); j++){
            System.out.println("J " + j);
            System.out.println("x: " + xWidthGapCoord.get(j)[0] + " w " + xWidthGapCoord.get(j)[1]);
        }
    }

    //Repaint barplot when fastaFile is given
    public void repaintGraph(String sequence) {
        this.setVisible(true);
        //Calculate coordinates
        calculateCoordinates(sequence);
        //Draw rectangles
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 852, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 34, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
